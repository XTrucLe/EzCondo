import React, { useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  TextInput,
  Alert,
  StyleSheet,
  ScrollView,
} from "react-native";
import { useNavigation } from "expo-router";

export default function Booking() {
  const navigation = useNavigation();

  // State l∆∞u th√¥ng tin ƒë·∫∑t ch·ªó
  const [date, setDate] = useState(new Date());
  const [showDatePicker, setShowDatePicker] = useState(false);
  const [selectedTime, setSelectedTime] = useState("");
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");

  // Danh s√°ch khung gi·ªù c√≥ s·∫µn
  const availableTimes = [
    "06:00 - 07:00",
    "07:30 - 08:30",
    "16:00 - 17:00",
    "18:30 - 19:30",
  ];

  // X·ª≠ l√Ω khi ch·ªçn ng√†y
  const onChangeDate = (event: any, selectedDate?: Date) => {
    setShowDatePicker(false);
    if (selectedDate) {
      setDate(selectedDate);
    }
  };

  // X·ª≠ l√Ω khi nh·∫•n n√∫t "ƒê·∫∑t l·ªãch"
  const handleBooking = () => {
    if (!name || !phone || !selectedTime) {
      Alert.alert("L·ªói", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }
    Alert.alert(
      "‚úÖ ƒê·∫∑t l·ªãch th√†nh c√¥ng!",
      `T√™n: ${name}\nS·ªë ƒëi·ªán tho·∫°i: ${phone}\nNg√†y: ${date.toDateString()}\nGi·ªù: ${selectedTime}`
    );
    navigation.goBack();
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>üìÖ ƒê·∫∑t l·ªãch b∆°i l·ªôi</Text>

      {/* Ch·ªçn ng√†y */}
      <Text style={styles.label}>Ch·ªçn ng√†y:</Text>
      <TouchableOpacity
        onPress={() => setShowDatePicker(true)}
        style={styles.dateButton}
      >
        <Text style={styles.dateText}>{date.toDateString()}</Text>
      </TouchableOpacity>

      {/* Ch·ªçn gi·ªù */}
      <Text style={styles.label}>Ch·ªçn khung gi·ªù:</Text>
      <View style={styles.timeContainer}>
        {availableTimes.map((time) => (
          <TouchableOpacity
            key={time}
            style={[
              styles.timeSlot,
              selectedTime === time && styles.selectedTime,
            ]}
            onPress={() => setSelectedTime(time)}
          >
            <Text
              style={
                selectedTime === time
                  ? styles.selectedTimeText
                  : styles.timeText
              }
            >
              {time}
            </Text>
          </TouchableOpacity>
        ))}
      </View>

      {/* Nh·∫≠p th√¥ng tin kh√°ch h√†ng */}
      <Text style={styles.label}>H·ªç v√† t√™n:</Text>
      <TextInput
        style={styles.input}
        placeholder="Nh·∫≠p h·ªç t√™n"
        value={name}
        onChangeText={setName}
      />

      <Text style={styles.label}>S·ªë ƒëi·ªán tho·∫°i:</Text>
      <TextInput
        style={styles.input}
        placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
        keyboardType="phone-pad"
        value={phone}
        onChangeText={setPhone}
      />

      {/* N√∫t ƒê·∫∑t l·ªãch */}
      <TouchableOpacity style={styles.button} onPress={handleBooking}>
        <Text style={styles.buttonText}>X√°c nh·∫≠n ƒë·∫∑t l·ªãch</Text>
      </TouchableOpacity>
    </ScrollView>
  );
}

// üé® Styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f4f4f4",
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    textAlign: "center",
    color: "#007AFF",
    marginBottom: 20,
  },
  label: {
    fontSize: 16,
    fontWeight: "500",
    color: "#333",
    marginBottom: 5,
  },
  dateButton: {
    backgroundColor: "#fff",
    padding: 12,
    borderRadius: 8,
    alignItems: "center",
    marginBottom: 15,
    shadowColor: "#000",
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 2,
  },
  dateText: {
    fontSize: 16,
    color: "#007AFF",
  },
  timeContainer: {
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "space-around",
    marginBottom: 20,
  },
  timeSlot: {
    backgroundColor: "#fff",
    paddingVertical: 10,
    paddingHorizontal: 15,
    borderRadius: 8,
    marginBottom: 10,
    shadowColor: "#000",
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 2,
  },
  selectedTime: {
    backgroundColor: "#007AFF",
  },
  timeText: {
    fontSize: 16,
    color: "#333",
  },
  selectedTimeText: {
    color: "white",
    fontWeight: "bold",
  },
  input: {
    backgroundColor: "#fff",
    padding: 12,
    borderRadius: 8,
    fontSize: 16,
    marginBottom: 15,
    shadowColor: "#000",
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 2,
  },
  button: {
    backgroundColor: "#007AFF",
    paddingVertical: 12,
    borderRadius: 8,
    alignItems: "center",
    marginBottom: 30,
  },
  buttonText: {
    fontSize: 18,
    color: "white",
    fontWeight: "bold",
  },
});
